"""
Django settings for vm_service project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import json


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, ".env"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    key="SECRET_KEY",
    default="ksad-rerj233dn-&e$augjy_z_zp=&os_l_aiyb%l)6r&6agv06!r0=5j!ey)1==$",
)
REFRESH_SECRET_KEY = os.getenv(
    key="REFRESH_SECRET_KEY",
    default="jsjs^s1)z3qx_m%%5!ok2sd4434ivkkarl^5t#a-n8c#=-5+(p+xjr8g",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "operations",
    "service_auth",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "vm_service.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "vm_service.wsgi.application"

TIME_ZONE = os.getenv(key="TIME_ZONE", default="Asia/Kolkata")

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DB_HOST = os.getenv(
    key="DB_HOST",
    default="vyom.ccwa0cfjeete.eu-north-1.rds.amazonaws.com",
)
DB_NAME = os.getenv(key="DB_NAME", default="vm_service")
DB_USER = os.getenv(key="DB_USER", default="vm_service_user")
DB_PASSWORD = os.getenv(key="DB_PASSWORD", default="AZ5...l4")
DB_PORT = os.getenv(key="DB_PORT", default="3306")


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": DB_NAME,
        "USER": DB_USER,
        "PASSWORD": DB_PASSWORD,
        "HOST": DB_HOST,
        "PORT": DB_PORT,
        "TIME_ZONE": TIME_ZONE,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# LOGGING CONFIGURATION
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "console": {
            "format": "%(name)-12s %(levelname)-8s %(message)s"
        },
        "file": {
            "format": "%(asctime)s %(name)-12s %(levelname)-8s %(message)s"
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "console",
        },
        "vm_service.file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "formatter": "file",
            "filename": "vm_service.log",
        },
        "operations.file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "formatter": "file",
            "filename": "operations.log",
        },
        "service_auth.file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "formatter": "file",
            "filename": "service_auth.log",
        },
    },
    "loggers": {
        "vm_service": {
            "handlers": ["console", "vm_service.file"],
            "level": "INFO",
            "propagate": True,
        },
        "operations": {
            "handlers": ["console", "operations.file"],
            "level": "INFO",
            "propagate": True,
        },
        "service_auth": {
            "handlers": ["console", "service_auth.file"],
            "level": "INFO",
            "propagate": True,
        },
    },
}


# REST FRAMEWORK SETTINGS
REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.FormParser",
        "rest_framework.parsers.MultiPartParser",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "service_auth.vms.Authentication"
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "EXCEPTION_HANDLER": "vm_service.utils.exception_handler.custom_exception_handler",
    "DATETIME_FORMAT": "%Y-%m-%d %H:%M:%S",
}

# TOKEN SETTINGS - IN MINS
ACCESS_TOKEN_EXPIRY = int(
    os.getenv(key="ACCESS_TOKEN_EXPIRY", default=30)
)
REFRESH_TOKEN_EXPIRY = int(
    os.getenv(key="REFRESH_TOKEN_EXPIRY", default=60)
)

PLATFORM_CODE = os.getenv(
    key="PLATFORM_CODE",
    default="8a650aae-cf0d-4a47-90e5-bbe7b0a6d9a9",
)
API_KEY = os.getenv(
    key="API_KEY", default="3f92f904-7d97-4e6a-a6b6-ad92b03d2227"
)

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
